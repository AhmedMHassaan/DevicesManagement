/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.transactions_ui;

import base.AdvancedFrame;
import data.pojo.Department;
import data.pojo.Device;
import data.pojo.responses.DeviceTransactionResponse;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import repository.DevicesRepository;
import ui.transition_report.TransisionReportUI;
import uis_items.TransactionsFilterUI;
import utils.MessageBox;

/**
 *
 * @author pc
 */
public class TransactionsUI extends AdvancedFrame {

    /**
     * Creates new form TransactionsUI
     */
    private TransactionsController transactionsController;
    private DeviceTransactionResponse filter;

    private static TransactionsUI instance = null;
    private int deviceId = 0;

    /**
     * Creates new form DepartmentsUI
     */
    private TransactionsUI() {
        initComponents();
    }

    public static TransactionsUI getInstance(int _deviceId) {

        synchronized (TransactionsUI.class) {
            if (instance == null) {
                synchronized (TransactionsUI.class) {
                    instance = new TransactionsUI();
                }
            }

        }

        instance.transactionsController = new TransactionsController(DevicesRepository.getInstance());
        instance.deviceId = _deviceId;

        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tableMenu = new javax.swing.JPopupMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        transactionsTable = new base.AdvancedTable();
        btnFilter = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("تنقلات الأجهزة");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        transactionsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "م", "السيريال", "الموديل", "النوع", "نقل من", "نقل إلي", "المسلم", "المستلم", "سبب النقل", "وقت النقل"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        transactionsTable.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        transactionsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                transactionsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(transactionsTable);
        if (transactionsTable.getColumnModel().getColumnCount() > 0) {
            transactionsTable.getColumnModel().getColumn(0).setMinWidth(5);
            transactionsTable.getColumnModel().getColumn(0).setPreferredWidth(5);
        }

        btnFilter.setText("فلتر");
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1234, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(354, 354, 354)
                .addComponent(btnFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(btnFilter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        btnFilter.setVisible(deviceId <= 0);
    }//GEN-LAST:event_formWindowOpened

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

    }//GEN-LAST:event_formWindowActivated

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
//        transactionsController.destroy();
//        deviceId = 0;
//        instance = null;
    }//GEN-LAST:event_formWindowClosing

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

    }//GEN-LAST:event_formComponentShown

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        System.out.println("Device id = " + deviceId);
        btnFilter.setVisible(deviceId <= 0);
//        System.out.println("transController = "+transactionsController);
        if (filter == null) {
            filter = new DeviceTransactionResponse();
        }
        filter.setDevice(new Device(deviceId));
        transactionsController.getAllTransactionsThenFillTable(transactionsTable, filter);
    }//GEN-LAST:event_formWindowGainedFocus

    private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
        ArrayList<Department> allDepartmentForFilter = transactionsController.getAllDepartmentForFilter();
        TransactionsFilterUI filterDialog = new TransactionsFilterUI(this, false, filter, allDepartmentForFilter);
        filterDialog.setLocationRelativeTo(getParent());
        filterDialog.setOnResultReadyCallback((DeviceTransactionResponse _filter) -> {
            this.filter = _filter;

            System.out.println("Message is " + filter);
            transactionsController.getAllTransactionsThenFillTable(transactionsTable, _filter);
            System.out.println("Table size " + transactionsTable.getRowCount());

        });
        filterDialog.setVisible(true);

    }//GEN-LAST:event_btnFilterActionPerformed

    private void transactionsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_transactionsTableMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1 && evt.getClickCount() == 2) {
            // left click
            String cellValue = transactionsTable.getSelectedCell();
            if (cellValue != null) {
                MessageBox.showMessage(cellValue);
            }

        } else if (evt.getButton() == MouseEvent.BUTTON3) {
            preparePopupMenu();

            int r = transactionsTable.rowAtPoint(evt.getPoint());
            if (r >= 0 && r < transactionsTable.getRowCount()) {
                transactionsTable.setRowSelectionInterval(r, r);

            } else {
                transactionsTable.clearSelection();
            }

            int rowindex = transactionsTable.getSelectedRow();
            if (rowindex < 0) {
                return;
            }

//                if (evt.isPopupTrigger() && evt.getComponent() instanceof JTable) {
            if (evt.getComponent() instanceof JTable) {
                showPopupMenu(evt);
//                    tablePopupMenu.show(evt.getComponent(), evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_transactionsTableMouseClicked

    private void preparePopupMenu() {
        tableMenu.removeAll();
        tableMenu.setBorderPainted(true);

        tableMenu.add("استخراج مستند").addActionListener((ae) -> {
            try {
//                System.out.println("Clicked Here 1");
//                MessageBox.showMessage("Here 1");
                DeviceTransactionResponse trans = transactionsController.getSelectTransition(transactionsTable);
//                System.out.println("Clicked Here 2");
//                MessageBox.showMessage("Here 2");
                openTransitionReportPage(trans);
//                MessageBox.showMessage("Here 3");
//                System.out.println("Clicked Here 3");
            } catch (Exception ex) {
                Logger.getLogger(TransactionsUI.class.getName()).log(Level.SEVERE, null, ex);
                MessageBox.showMessage("E=> "+ex.getMessage());
            }
        });

//        tableMenu.add("عرض عمليات النقل").addActionListener((ae) -> btnShowTransactionsActionPerformed(ae));
        tableMenu.add("نسخ").addActionListener((ae) -> {
            String cellValue = transactionsTable.getSelectedCell();
            if (cellValue != null) {
                Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
                StringSelection strse1 = new StringSelection(cellValue);
                clipboard.setContents(strse1, strse1);
                MessageBox.showMessage("تم نسخ " + cellValue + " بنجاح");
            }

        }
        );
    }

    private void showPopupMenu(MouseEvent evt) {
        tableMenu.show(transactionsTable, evt.getX(), evt.getY());
//        System.out.println("Shown");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransactionsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransactionsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransactionsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransactionsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                getInstance(0).setVisible(true);
            }
        });
    }

    @Override
    public void destroyInstance() {
        transactionsController.destroy();
        transactionsController = null;
        deviceId = 0;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFilter;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu tableMenu;
    private base.AdvancedTable transactionsTable;
    // End of variables declaration//GEN-END:variables

    private void openTransitionReportPage(DeviceTransactionResponse trans) {
        try {
//            MessageBox.showMessage("Here 2A");
            startNewFrameWithOldFrame(new TransisionReportUI(trans));
//            MessageBox.showMessage("Here 2B");
        } catch (Exception e) {
            MessageBox.showErrorMessage(e.getMessage());
        }
    }
}
