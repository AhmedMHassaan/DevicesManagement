/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.transition_report;

import base.AdvancedFrame;
import data.pojo.responses.DeviceTransactionResponse;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import uis_items.TransitionReportUIItem;
import utils.ConfigurationsUtils;
import utils.MessageBox;

/**
 *
 * @author pc
 */
public class TransisionReportUI extends AdvancedFrame {

    /**
     * Creates new form TransisionReportUI
     *
     * @param trans
     */
    public TransisionReportUI(DeviceTransactionResponse trans) {
        initComponents();

        parentDocPanel.setLayout(new java.awt.GridLayout(2, 0, 0, 0));

        parentDocPanel.add(new TransitionReportUIItem(trans, true));
        parentDocPanel.add(new TransitionReportUIItem(trans, false));

        try {
            txtManagerName.setText(ConfigurationsUtils.getDepManagerName());
            txtManagerJob.setText(ConfigurationsUtils.getDepManagerJobTitle());

        } catch (Exception e) {
            MessageBox.showErrorMessage("ث=." + e.getMessage());
        }

        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        parentDocPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtManagerName = new javax.swing.JTextField();
        txtReceiverJobTitle = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtManagerJob = new javax.swing.JTextField();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("مستند نقل جهاز");

        jButton1.setText("طباعة");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout parentDocPanelLayout = new javax.swing.GroupLayout(parentDocPanel);
        parentDocPanel.setLayout(parentDocPanelLayout);
        parentDocPanelLayout.setHorizontalGroup(
            parentDocPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 613, Short.MAX_VALUE)
        );
        parentDocPanelLayout.setVerticalGroup(
            parentDocPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 854, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("اسم و رتبة رئيس الفرع");

        txtManagerName.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtManagerName.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtManagerName.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                txtManagerNameCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtManagerNameInputMethodTextChanged(evt);
            }
        });
        txtManagerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtManagerNameActionPerformed(evt);
            }
        });
        txtManagerName.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtManagerNamePropertyChange(evt);
            }
        });
        txtManagerName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtManagerNameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtManagerNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtManagerNameKeyTyped(evt);
            }
        });
        txtManagerName.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                txtManagerNameVetoableChange(evt);
            }
        });

        txtReceiverJobTitle.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtReceiverJobTitle.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtReceiverJobTitle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtReceiverJobTitleKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtReceiverJobTitleKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtReceiverJobTitleKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("وظيفة المستلم");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("وظيفته في الوحدة");

        txtManagerJob.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtManagerJob.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtManagerJob.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtManagerJobKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtManagerJobKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtManagerJobKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(310, 310, 310))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtReceiverJobTitle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                            .addComponent(txtManagerName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtManagerJob, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(parentDocPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(parentDocPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(135, 135, 135)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(txtManagerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtManagerJob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtReceiverJobTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))))
                .addContainerGap(3953, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String recieverJob = txtReceiverJobTitle.getText();

        if (txtManagerName.getText().isEmpty()) {
            MessageBox.showErrorMessage("يرجي كتابة اسم رئيس الفرع");
            return;
        }
        if (txtManagerJob.getText().isEmpty()) {
            MessageBox.showErrorMessage("يرجي كتابة وظيفة رئيس الفرع");
            return;
        }
        if (recieverJob.isEmpty()) {
            MessageBox.showErrorMessage("يرجي كتابة وظيفة المستلم");
            return;
        }
        PrinterJob pj = PrinterJob.getPrinterJob();
        pj.setJobName(" Print Component ");

        pj.setPrintable((Graphics pg, PageFormat pf, int pageNum) -> {
            if (pageNum > 0) {
                return Printable.NO_SUCH_PAGE;
            }

            Graphics2D g2 = (Graphics2D) pg;
//            g2.translate(pf.getImageableX(), pf.getImageableY());
            parentDocPanel.paint(g2);

            return Printable.PAGE_EXISTS;
        });
        if (pj.printDialog() == false) {
            return;
        }

        try {
            pj.print();
        } catch (PrinterException ex) {
            // handle exception
            MessageBox.showErrorMessage("Error => " + ex.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtManagerNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtManagerNameKeyTyped

//        TransitionReportUIItem component = (TransitionReportUIItem) parentDocPanel.getComponent(0);
//        component.setManagerName(txtManagerName.getText());
    }//GEN-LAST:event_txtManagerNameKeyTyped

    private void txtManagerJobKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtManagerJobKeyTyped

    }//GEN-LAST:event_txtManagerJobKeyTyped

    private void txtManagerNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtManagerNameKeyPressed

    }//GEN-LAST:event_txtManagerNameKeyPressed

    private void txtManagerNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtManagerNameKeyReleased
        TransitionReportUIItem component = (TransitionReportUIItem) parentDocPanel.getComponent(0);
        component.setManagerName(txtManagerName.getText());

        TransitionReportUIItem component2 = (TransitionReportUIItem) parentDocPanel.getComponent(1);
        component2.setManagerName(txtManagerName.getText());
    }//GEN-LAST:event_txtManagerNameKeyReleased

    private void txtManagerNameInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtManagerNameInputMethodTextChanged

    }//GEN-LAST:event_txtManagerNameInputMethodTextChanged

    private void txtManagerNameCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtManagerNameCaretPositionChanged

    }//GEN-LAST:event_txtManagerNameCaretPositionChanged

    private void txtManagerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtManagerNameActionPerformed

    }//GEN-LAST:event_txtManagerNameActionPerformed

    private void txtManagerNamePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtManagerNamePropertyChange

    }//GEN-LAST:event_txtManagerNamePropertyChange

    private void txtManagerNameVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_txtManagerNameVetoableChange

    }//GEN-LAST:event_txtManagerNameVetoableChange

    private void txtManagerJobKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtManagerJobKeyPressed


    }//GEN-LAST:event_txtManagerJobKeyPressed

    private void txtReceiverJobTitleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtReceiverJobTitleKeyTyped


    }//GEN-LAST:event_txtReceiverJobTitleKeyTyped

    private void txtReceiverJobTitleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtReceiverJobTitleKeyPressed

    }//GEN-LAST:event_txtReceiverJobTitleKeyPressed

    private void txtReceiverJobTitleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtReceiverJobTitleKeyReleased
        /*  System.out.println("Starting to typing");
        System.out.println("Key "+evt.getKeyChar()+" Pressed");
        System.out.println("Now Text is "+txtReceiverJobTitle.getText());
        System.out.println("----------------");*/

        TransitionReportUIItem component = (TransitionReportUIItem) parentDocPanel.getComponent(0);
        component.setReciverJobTitle(txtReceiverJobTitle.getText());

        TransitionReportUIItem component1 = (TransitionReportUIItem) parentDocPanel.getComponent(1);
        component1.setReciverJobTitle(txtReceiverJobTitle.getText());

    }//GEN-LAST:event_txtReceiverJobTitleKeyReleased

    private void txtManagerJobKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtManagerJobKeyReleased
        TransitionReportUIItem component = (TransitionReportUIItem) parentDocPanel.getComponent(0);
        component.setDepManagerJob(txtManagerJob.getText());

        TransitionReportUIItem component1 = (TransitionReportUIItem) parentDocPanel.getComponent(1);
        component1.setDepManagerJob(txtManagerJob.getText());
    }//GEN-LAST:event_txtManagerJobKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransisionReportUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransisionReportUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransisionReportUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransisionReportUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new TransisionReportUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPanel parentDocPanel;
    private javax.swing.JTextField txtManagerJob;
    private javax.swing.JTextField txtManagerName;
    private javax.swing.JTextField txtReceiverJobTitle;
    // End of variables declaration//GEN-END:variables

    @Override
    public void destroyInstance() {

    }
}
