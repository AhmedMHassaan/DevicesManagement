/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uis_items;

import com.k33ptoo.components.KGradientPanel;
import data.pojo.DashboardStaticsItem;
import java.awt.Component;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseListener;
import java.io.File;
import java.net.URL;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import utils.ScreenUtils;

/**
 *
 * @author pc
 */
public class ItemDashboard extends javax.swing.JFrame {

    private final int DEFAULT_IMAGE_WIDTH = 90;
    private final int DEFAULT_IMAGE_HEIGHT = 100;

    public ItemDashboard(KGradientPanel itemPanel, JLabel lblCount, JLabel lblImage, JLabel lblTitle) throws HeadlessException {
        this.itemPanel = itemPanel;
        this.lblCount = lblCount;
        this.lblImage = lblImage;
        this.lblTitle = lblTitle;
    }

    /**
     * Creates new form ItemDashboard
     */
    public ItemDashboard() {
        initComponents();
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        itemPanel = new com.k33ptoo.components.KGradientPanel();
        lblTitle = new javax.swing.JLabel();
        lblImage = new javax.swing.JLabel();
        lblCount = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        itemPanel.setkBorderRadius(20);
        itemPanel.setkEndColor(new java.awt.Color(204, 204, 204));
        itemPanel.setkGradientFocus(100);
        itemPanel.setkStartColor(new java.awt.Color(102, 102, 255));
        itemPanel.setLayout(new java.awt.GridLayout(3, 1, 0, 3));

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Item Title");
        lblTitle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        itemPanel.add(lblTitle);

        lblImage.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblImage.setForeground(new java.awt.Color(255, 255, 255));
        lblImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImage.setText("image");
        lblImage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        itemPanel.add(lblImage);

        lblCount.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblCount.setForeground(new java.awt.Color(0, 102, 255));
        lblCount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCount.setText("26");
        lblCount.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        itemPanel.add(lblCount);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(itemPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(itemPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public Component getDashboardItemView(DashboardStaticsItem item) throws Exception {
        setItemTitle(item.getTitle());
//        setItemImage(item.getImage());
        setItemCount(item.getCount());
       

       
        return itemPanel;
    }
    
    public void setOnItemClickListener(MouseAdapter listener ){
//        itemPanel.addMouseListener(listener);
        lblCount.addMouseListener(listener);
        lblImage.addMouseListener(listener);
        lblTitle.addMouseListener(listener);
        System.out.println("Item "+lblTitle.getText()+ " Clicked");
    }

    private int getImageWidth() {
        return lblImage.getWidth() == 0 ? DEFAULT_IMAGE_WIDTH : lblImage.getWidth();
    }

    private int getImageHeight() {
        return lblImage.getHeight() == 0 ? DEFAULT_IMAGE_HEIGHT : lblImage.getHeight();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.k33ptoo.components.KGradientPanel itemPanel;
    private javax.swing.JLabel lblCount;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration//GEN-END:variables

    private void setItemTitle(String title) {
        lblTitle.setText("");
        lblImage.setText(title);
    }

    private void setItemImage(String image) throws Exception{
         Image img = null;

        if (image == null || image.isEmpty()) {
            lblImage.setVisible(false);
        } else {
            if (image.startsWith("http")) {
                URL url = new URL(image);
                img = ImageIO.read(url).getScaledInstance(getImageWidth(), getImageHeight(), 0);
            } else {
                File imgFile = new File(image);
                img = ImageIO.read(imgFile).getScaledInstance(getImageWidth(), getImageHeight(), 0);
            }
            ImageIcon icon = new ImageIcon(img);

            lblImage.setIcon(icon);
        }

//        
//        Image //        Image img = ImageIO.read(url).getScaledInstance(90, 100, 0);
        lblImage.setText("");
    }

    private void setItemCount(String count) {
         lblCount.setText(count);
    }
}
